{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAI,CAAC,CAAA,CAAE,CAAC;AAEzB,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAK;EACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AAC1B,CAAC,CAAC;AACF,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAK;EACrB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;AAC1B,CAAC,CAAC,EDAW,IAAI;ACCjB,EDEE,ECFE,CAAC,EAAE,CAAC,GDEN,GCFY,EAAE,ADEM,IAAe,EAAA,MCFhB;EACnB,EDCmC,KCD5B,CAAC,GAAG,CAAC,KDCuB,OCDX,ADCW,CCDV,GDCU;ACArC,CAAC,CAAC,EDAoB,IAAA,CAAA,IAAI,GAAJ,IAAI;ACE1B,IAAI,ADJF,CCIG,GDJH,CAAA,GCIU,CAAC,EDJL,GAAkC,CAAA,CAAE,MCIlB,CAAC;EDFa;EAAC,YAAA,CAAA,IAAA;IAAA,GAAA;IAAA,KAAA,EACvC,SAAA,IAA+B,QAAW,EAAA;MACxC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5B;EAAC;IAAA,GAAA;IAAA,KAAA,EACD,SAAA,IAAI,MAAiB,EAAA;MACnB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;IAClC;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,GAAG,SAAiB,EAAE,QAAkB,EAAA;MACtC,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE;MAC7C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;MACvB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ;IACnC;EAAC;IAAA,GAAA;IAAA,KAAA,EAED,SAAA,QAAQ,SAAiB,EAAA;MACvB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;MACvC,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;QACtC;MACF;MAEA,QAAQ,CAAC,OAAO,CAAC,UAAA,QAAQ,EAAG;QAC1B,QAAQ,CAAA,CAAE;MACZ,CAAC,CAAC;IACJ;EAAC;EAAA,OAAA,IAAA;AAAA;AA1BH,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["type stingNumberUndefined = string | number | undefined\ntype Callback = () => void\n\ninterface UserProps {\n  name?: string\n  age?: number\n}\n\nexport class User {\n  events: { [key: string]: Callback[] } = {}\n\n  constructor(private data: UserProps) {}\n  get<K extends keyof UserProps>(propName: K): stingNumberUndefined {\n    return this.data[propName]\n  }\n  set(update: UserProps): void {\n    Object.assign(this.data, update)\n  }\n\n  on(eventName: string, callback: Callback): void {\n    const handlers = this.events[eventName] || []\n    handlers.push(callback)\n    this.events[eventName] = handlers\n  }\n\n  trigger(eventName: string): void {\n    const handlers = this.events[eventName]\n    if (!handlers || handlers.length === 0) {\n      return\n    }\n\n    handlers.forEach(callback => {\n      callback()\n    })\n  }\n}\n","import { User } from './models/User'\nconst user = new User({})\n\nuser.on('change', () => {\n  console.log('change #1')\n})\nuser.on('change', () => {\n  console.log('change #2')\n})\nuser.on('save', () => {\n  console.log('Saving ...')\n})\n\nuser.trigger('aljkfdlakjf')\n"]}